"0","com %>% 
  filter(project_status %in% c(""Completed"", ""Ongoing"") & 
           activity %out% c(""ISIMM"") & beneficiaries > 0) %>% 
  group_by(admin4pcode, cluster) %>% 
  summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>% 
  ungroup() %>%  
  pivot_wider(names_from = cluster, values_from = beneficiaries) %>% 
  right_join(pop %>% select(total_pop, admin4pcode), 
             by = ""admin4pcode"") %>% 
  left_join(locations %>% 
              select(governorate = admin1name_en, 
                     district = admin2name_en, 
                     sub_district = admin3name_en, 
                     community = location_name_en, 
                     admin4pcode), 
            by = ""admin4pcode"") %>%
  left_join(com %>% 
              filter(project_status %in% c(""Completed"", ""Ongoing"") & 
                       activity %out% c(""ISIMM"")) %>%
             group_by(admin4pcode) %>%
             slice(which.max(beneficiaries)) %>%
             ungroup() %>%
             select(beneficiaries, admin4pcode), 
           by = ""admin4pcode"") %>% 
  mutate(beneficiaries = ifelse(beneficiaries == 0, NA_integer_, beneficiaries)) %>% 
   left_join(com %>%
              filter(project_status %in% c(""Completed"", ""Ongoing"") &
                       activity %out% c(""ISIMM"") & beneficiaries > 0) %>%
              group_by(admin4pcode) %>% 
              summarise(beneficiary_frequencies = sum(beneficiaries, na.rm = TRUE),
                        clusters = n_distinct(cluster, na.rm = TRUE)), 
            by = ""admin4pcode"") %>% 
  right_join(pop %>% select(population = total_pop, admin4pcode), 
             by = ""admin4pcode"") %>% 
  left_join(eq %>% 
              select(wounded_dead, 
                     wounded_dead_100k, 
                     damaged_houses, 
                     damaged_houses_100k, 
                     admin4pcode), 
            by = ""admin4pcode"") %>% 
  left_join(eq_score$data %>% 
              select(eq_score, admin4pcode), 
            by = ""admin4pcode"") %>% 
  mutate(pc_reached = beneficiary_frequencies / population, 
         pc_reached = ifelse(is.infinite(pc_reached), 
                             NA_integer_, 
                             pc_reached)) %>% 
  mutate_at(vars(wounded_dead_100k, damaged_houses_100k), 
            ~ round(., digits = 1)) %>% 
  mutate_at(vars(eq_score, pc_reached), ~ round(., digits = 3)) %>% 
  select(governorate, district, sub_district, community, admin4pcode, 
         beneficiaries, beneficiary_frequencies, clusters, eq_score, population = total_pop, pc_reached, 
         wounded_dead, wounded_dead_100k, damaged_houses, damaged_houses_100k, 
         Cash, Education, FSL, Nutrition, Protection, SNFI, WASH, CCCM, ERL) %>% 
    write_csv(""./data/admin4_prioritisation.csv"")
"
"1","[1m[33mError[39m in `select()`:[22m
[33m![39m Can't subset columns that don't exist.
[31mx[39m Column `Cash` doesn't exist.
Backtrace:
[90m 1. [39m... %>% write_csv(""./data/admin4_prioritisation.csv"")
[90m 7. [39m[1m[94mdplyr:::select.data.frame([39m[22m...[1m[94m)[39m[22m
"
