---
title: "Intercluster 4Ws review"
date:  "23 March 2023"
output:
  html_document:
    code_download: yes
    theme: readable
    toc: yes
    toc_depth: 4
    toc_float: yes
    number_sections: no
    collapsed: no
always_allow_html: yes
---

```{css, echo=FALSE}

#TOC::before {
  content: "";
  display: block;
  height: 70px;
  margin: 2em 20px 40px 20px;
  background-image: url("NWS-CWG logo.PNG");
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}
```

```{=html}
<style>
    body .main-container {
        max-width: 1280px;
    }
</style>
```


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(scales)
library(magrittr)
library(viridis)
library(patchwork)
library(DT)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(magrittr)
library(readxlsb)
library(tidymodels)
library(widyr)

theme_set(theme_light())

# disabling scientific notation
options(scipen = 100)

# pander tables all in one row
panderOptions('table.split.table', Inf)

# pander thousands separator
panderOptions("big.mark", ",")

# replace 
opts <- options(knitr.kable.NA = "")

`%out%` <- Negate(`%in%`)

# function for transposing df
transpose_df <- function(df) {
  t_df <- data.table::transpose(df)
  colnames(t_df) <- rownames(df)
  rownames(t_df) <- colnames(df)
  t_df <- t_df %>%
    tibble::rownames_to_column(.data = .) %>%
    tibble::as_tibble(.)
  return(t_df)
}

# scaling functions 
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}

#mode function 
mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

```

```{r data}
pcode3_shape <- 
  sf::st_read("./data/syr_admbnda_uncs_unocha_20201217/syr_admbnda_adm3_uncs_unocha_20201217.shp", 
          quiet = TRUE)

nw_pcode3 <- read_excel("./data/2023HNO_PiN_Severity_detailedAoI_FORSHARE 15032023.xlsx", skip = 1, 
                  sheet = 1) %>%
  clean_names() %>% 
  filter(ao_c == "NW") %>% 
  pull(admin3pcode)

locations <- read_excel("./data/Locations.xlsx") %>% 
  clean_names()

pop <- read_excel("./data/Population_Data_May_2022_final_01122022_with_SADD.xlsx", 
           sheet = 5, 
           skip = 2) %>% 
  clean_names() %>% 
  select(admin0name_en:longitude_x, 
         final_est_of_id_ps_may_2022:family_avg_size_total_pop) %>% 
  rename(idps = final_est_of_id_ps_may_2022, 
         total_pop = final_est_of_total_pop_may_2022, 
         avg_family_size = family_avg_size_total_pop)

names_eq <- c(
  "date",
  "governorate",
  "district",
  "sub_district",
  "community",
  "admin4",
  "casualties",
  "injuries",
  "completely_destroyed_houses",
  "damaged_unihabitable_houses",
  "temporary_accommodation_centres",
  "idps_in_all_centres",
  "schools_as_accomodation_centres",
  "idps_in_schools",
  "tents_needed",
  "blankets_mattresses_needed",
  "temporary_accommodation_centres_available", 
  "accessible_civil_defense",
  "latrines_available",
  "meals_needed_per_day",
  "need_blood_donations",
  "health_services_available",
  "necessary_medical_equipment",
  "rubble_volunteers",
  "telecoms_available",
  "electricity_available", 
  "heating_fuel_needed"
)

eq <- read_excel("./data/syria-earthquake-impact-20-march-2023.xlsx",
                 sheet = "DATASET") %>% 
  setNames(names_eq)

com <- read_csv("./data/com.csv")
```


# 1. Summary 

In preparation of consolidating and reporting on all cash and voucher-based activities (CVA), not just multipurpose cash, the Cash Working Group has undertaken a review of extant 4W templates to understand their interoperability. 

Interoperability (and adherence to cash reporting standards) is judged by the inclusion of the following data within 4Ws:

* **Admin4**: Data should at least be available at community level
* **Modality**: It is important to understand the breakdown, by cluster, of beneficiaries reached by cash, in-kind and service delivery
* **Delivery mechanism**: It is important to understand how many beneficiaries are reached by direct distributions, as opposed to those reached by agents or money traders
* **Conditionality**
* **Transfer value**
* **Frequency**: It is important to understand how much of the response is comprised of one-off activities vs continuing support

<br> 

```{r}
sum_table <- tribble(
  ~cluster, ~admin4, ~modality, ~delivery_mechanism, ~conditionality, ~transfer_value, ~frequency, 
  "Cash", TRUE, TRUE, TRUE, TRUE, TRUE, TRUE,
  "CCCM", TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
  "Education", TRUE, FALSE, FALSE, FALSE, FALSE, FALSE,
  "ERL", TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
  "FSL", TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
  "Health", FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
  "Nutrition", TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, 
  "Protection", TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, 
  "SNFI", TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, 
  "WASH", TRUE, FALSE, FALSE, FALSE, TRUE, FALSE
) 

colmatrix <- ifelse(sum_table[, -1] == TRUE, "#cceecc", "#eecccc")

sum_table %>% 
  rename(`Cluster/WG` = cluster) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  bg(j = 2:7, bg=colmatrix) %>% 
  set_table_properties(layout = "autofit", width = .99) %>% 
  set_caption("Review of 4W templates -- alignment with cash reporting standards") 


```

<br>

Immediately, were Education, ERL, FSL and SNFI partners to directly provide their 4Ws to the CWG, exactly how they would normally submit it to their Cluster Coordinators and IMs, they could be directly integrated in current CWG reporting with minimal issues. It should also be mentioned that the proposed Whole-of-Syria 4Ws intercluster reporting template is also in full compliance with cash reporting standards. 

However, in the course of this review, the consolidation of the 4W data has created additional opportunties for multi-sector analysis. Several new metrics are now available, and their viability and utility will be discussed in their own sections: 

* The number of cluster per admin4 (useful for determining inter-cluster gaps i.e. are there any areas  where we are doing Education without Shelter? Nutrition without Food Security?) 

* The number of activities per admin4 (similar to above, but more detailed. Additionally, this, together with the number of beneficiary frequencies are useful in establishing a shorthand for the overall level of investment the humanitarian community has per community). 

* The number of beneficiary frequencies at admin4. This, together with the number of activities, will be used to determine how industry-wide resources have been allocated across Northwest Syria and if those allocations have been fair i.e. are there communities of similar pre-existing vulnerability and earthquake damage that have received drastically different levels of support? The number of activities and the number of beneficiary frequencies are what are most visible to communities anyway and will be interpreted by affected persons as a proxy of the level of humanitarian interest. 

However, inter-cluster coordination is not the purview of the Cash Working Group. Any recommendations made should be understood as mainly intended to improve the programmatic and operational decision-making capabilities of our partners. 

All code and data is available for download. 



<br><br><br>

# 2. Consolidation

One consolidated dataset, referred to as `com` in the code chunks in this document, has been developed:

<br>

```{r}

com %>% 
  # Should water quality testing be included? 
  filter(project_status %in% c("Completed", "Ongoing") & 
           activity %out% c("ISIMM")) %>% 
  group_by(cluster) %>% 
  summarise(rows = n(),
            ben_frequencies = sum(beneficiaries, na.rm = TRUE), 
            communities = n_distinct(admin4pcode)) %>% 
  arrange(desc(communities)) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_caption("Footprint, reach and rows in combined dataset per cluster/WG") %>% 
  footnote(i = 1, j = 3, inline = TRUE, ref_symbols = "1", part = "header",
           as_paragraph("Beneficiary frequencies are the number of times an individual has received assistance, regardless double counting")) %>% 
  set_table_properties(layout = "autofit", width = .7)
```

<br>

The most obvious limitation, from a multisector perspective, is the exclusion of the Health data. It has been read it, but it cannot be combined with the rest of the data as there is no health reporting at admin4, likely due to them reporting based on the catchment area of each health facility. 

It is possible to perform a less-accurate analysis at admin3 that includes all clusters (and would invovle discarding much more data), but the Cash Working Group sees more value in an admin4-level analysis. 

<br>


### 2.1 Unique individuals reached

From this consolidated dataset at admin4, the total number of unique individuals reach by the response so far is estimated at `r com %>% filter(!is.na(admin4pcode) & activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>% group_by(admin4pcode) %>% slice(which.max(beneficiaries)) %>% {sum(.$beneficiaries, na.rm = TRUE)} %>% format(big.mark = ",")` persons. 

This figure was calculated by selecting the highest number of beneficiaries of any activity, of any sector, at the community level, after filtering out "ISIMM" monitoring activities. This is the specific code used for the calculation: 

```{r echo=TRUE, eval=FALSE}
com %>% 
  filter(!is.na(admin4pcode) & 
           activity != "ISIMM" & 
           project_status %in% c("Completed", "Ongoing")) %>%
  group_by(admin4pcode) %>% 
  slice(which.max(beneficiaries)) %>% 
  {sum(.$beneficiaries, na.rm = TRUE)}
```

An alternative calculation for unique individuals reached is proposed in the annexes.


### 2.2 Percentage of total population covered. 

```{r}
overallocated_communities <- com %>% 
  filter(!is.na(admin4pcode) & 
           activity != "ISIMM" & 
           project_status %in% c("Completed", "Ongoing")) %>%
  group_by(admin4pcode) %>% 
  slice(which.max(beneficiaries)) %>% 
  ungroup() %>% 
  left_join(pop %>% select(admin4pcode, total_pop),
            by = "admin4pcode") %>% 
  mutate(pc = beneficiaries / total_pop) %>% 
  filter(pc >= .95) %>% nrow()
```

There are `r overallocated_communities` communities where the number of unique individuals reached (highest number of any activity) is in excess of 95% of the community population. 




Of note, we have recorded multiple beneficiaries in communities that officially have 0 populations in the community list (last updated in May 2022)

```{r}
com %>% 
  filter(!is.na(admin4pcode) & 
           activity != "ISIMM" & 
           project_status %in% c("Completed", "Ongoing")) %>%
  group_by(admin4pcode) %>% 
  slice(which.max(beneficiaries)) %>% 
  left_join(pop %>% select(admin4pcode, total_pop),
            by = "admin4pcode") %>% 
  mutate(pc = beneficiaries / total_pop) %>% 
  filter(total_pop > 0) %>% 
  ggplot(aes(x = pc, y = beneficiaries)) + 
  geom_point(aes(size = total_pop), 
             alpha = .5) + 
  scale_x_log10(labels = percent) + 
  scale_y_log10(labels = comma, 
                breaks = c(0, 10, 100, 300, 1000, 3000, 10000, 30000, 100000)) + 
  scale_size_continuous(labels = comma, 
                        breaks = c(100, 1000, 10000, 30000, 100000, 200000))  
  
```

<br>

```{r}
com %>% 
  filter(!is.na(admin4pcode) & 
           activity != "ISIMM" & 
           project_status %in% c("Completed", "Ongoing")) %>%
  group_by(admin4pcode) %>% 
  slice(which.max(beneficiaries)) %>% 
  ungroup() %>% 
  left_join(pop %>% select(admin4pcode, total_pop), 
            by = "admin4pcode") %>% 
  mutate(pc = beneficiaries / total_pop) %>%
  ggplot(aes(x = pc)) + 
  geom_histogram() + 
  scale_x_log10(labels = percent) + 
  labs(x = "Percent of population covered")
```


### 2.2 

# A note on data quality








