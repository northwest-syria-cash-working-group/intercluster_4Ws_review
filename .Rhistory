lty = 2, colour = "blue", alpha = .6) +
geom_nline(aes(xintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50")
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_ben, y = eq_score)) +
geom_point(aes(size = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_ben),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6) +
geom_hline(aes(xintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50")
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_ben, y = eq_score)) +
geom_point(aes(size = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_ben),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6) +
geom_hline(aes(yintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50")
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_ben, y = eq_score)) +
geom_point(aes(size = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_ben),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6) +
geom_hline(aes(yintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50") +
labs(title = "Partners should prioritse communities in upper-left quadrant",
subtitle = "Followed by the lower-left quadrant/nBlue lines are means")
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_ben, y = eq_score)) +
geom_point(aes(size = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_ben),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6) +
geom_hline(aes(yintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50") +
labs(title = "Partners should prioritse communities in upper-left quadrant",
subtitle = "Followed by the lower-left quadrant\nBlue lines are means")
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_ben, y = eq_score)) +
geom_point(aes(size = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_ben),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6) +
geom_hline(aes(yintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50") +
labs(title = "Partners should prioritse communities in upper-left quadrant",
subtitle = "Followed by the lower-left quadrant\nBlue lines are means",
x = "% of total beneficiaries",
y = "Earthquake score")
```{r eval=FALSE}
com %>%
filter(activity %in% c("Food Baskets") | str_detect(activity, "Multipurpose")) %>%
pairwise_count(activity, admin4pcode, upper = FALSE) %>%
rename(activity1 = item1,
activity2 = item2,
`co-occurences` = n) %>%
flextable()
com %>%
filter(activity %in% c("Food Baskets") | str_detect(activity, "Multipurpose")) %>%
pairwise_count(activity, admin4pcode, upper = FALSE) %>%
rename(activity1 = item1,
activity2 = item2,
`co-occurences` = n) %>%
flextable() %>%
set_table_properties(layout = "autofit", width = .6) %>%
set_caption("MPC and Food Baskets co-occur in 171 communities")
com %>%
eq_plot_prep() %>%
filter(damaged_houses_100k > 0) %>%
ggplot(aes(x = pc_reached, y = damaged_houses_100k)) +
geom_point() +
scale_y_log10(labels = comma) +
scale_x_continuous(labels = percent) +
geom_smooth(method = "lm") +
labs(x = "% of population reached",
y = "Damaged houses per 100,000 persons") +
com %>%
eq_plot_prep() %>%
filter(wounded_dead_100k > 0) %>%
ggplot(aes(x = pc_reached, y = wounded_dead_100k)) +
geom_point() +
scale_y_log10(labels = comma) +
scale_x_continuous(labels = percent) +
geom_smooth(method = "lm") +
labs(x = "% of population reached",
y = "Dead/wounded per 100,000 persons") +
plot_annotation(title = "Severity of Earthquake damage does not predict % of population reached")
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_ben, y = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_ben),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1.3) +
geom_hline(aes(yintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1.3) +
geom_point(aes(size = eq_score)) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50") +
labs(title = "Partners should prioritse communities in upper-left quadrant",
subtitle = "Followed by the lower-left quadrant\nBlue lines are means",
x = "% of total beneficiaries",
y = "Earthquake score")
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_ben, y = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_ben),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_hline(aes(yintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_point(aes(size = eq_score)) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50") +
labs(title = "Partners should prioritse communities in upper-left quadrant",
subtitle = "Followed by the lower-left quadrant\nBlue lines are means",
x = "% of total beneficiaries",
y = "Earthquake score")
tribble(
~acronym, ~name,
"CCCM", "Camp Management and Camp Coordination",
"CWG", "Cash Working Group",
"ERL", "Early Recovery and Livelihoods",
"FSL", "Food Security and Livelihoods",
"HNO", "Humanitarian Needs Overview",
"HRP", "Humanitarian Response Plan",
"IDP", "Internally Displaced Person",
"MPC", "Multipurpose Cash",
"NWS", "Northwest Syria",
"OCHA", "UN Office for the Coordination of Humanitarian Affairs",
"SNFI", "Shelter and Non-Food Items",
"SWM", "Solid Waste Management",
"WASH", "Water, Sanitation and Hygiene"
) %>%
rename("" = acronym, "" = name) %>%
flextable() %>%
set_caption(as_paragraph(as_b("Acronyms"))) %>%
hline_top(border = fp_border_default(width = 0),
part = "header") %>%
set_table_properties(layout = "autofit") %>%
fontsize(j = 1:2, size = 8) %>%
fontsize(j = 1:2, size = 8, part = "header") %>%
line_spacing(part = "all", space = .2)
com %>% glimpse()
com %>% filter(!is.na(site))
com %>% filter(is.na(site))
com %>%
filter(project_status %in% c("Completed", "Ongoing")) %>%
mutate(site = case_when(!is.na(admin5pcode) ~ admin5pcode,
!is.na(camp_name) ~ camp_name,
TRUE ~ admin4pcode)) %>%
group_by(site) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
{sum(.$beneficiaries)}
com %>%
filter(project_status %in% c("Completed", "Ongoing")) %>%
mutate(site = case_when(!is.na(admin5pcode) ~ admin5pcode,
!is.na(camp_name) ~ camp_name,
TRUE ~ admin4pcode)) %>%
group_by(site) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
{sum(.$beneficiaries)} %>%
format(big.mark = ",")
com %>%
filter(cluster == "FSL") %>%
count(activity)
com %>%
filter(!is.na(admin4pcode) & activity != "ISIMM") %>%
group_by(admin4pcode) %>%
summarise(sectors = n_distinct(cluster))
com %>%
filter(!is.na(admin4pcode) & activity != "ISIMM") %>%
group_by(admin4pcode) %>%
summarise(sectors = n_distinct(cluster)) %>%
filter(sectors == 1) %>%
summarise(n_distinct(admin4pcode))
com %>%
filter(!is.na(admin4pcode) & activity != "ISIMM") %>%
group_by(admin4pcode) %>%
summarise(sectors = n_distinct(cluster)) %>%
filter(sectors != 1) %>%
summarise(n_distinct(admin4pcode))
pop %>% nrow()
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
left_join(com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode) %>%
summarise(beneficiary_frequencies = sum(beneficiaries, na.rm = TRUE),
clusters = n_distinct(cluster, na.rm = TRUE)),
by = "admin4pcode") %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(eq %>%
select(wounded_dead,
wounded_dead_100k,
damaged_houses,
damaged_houses_100k,
admin4pcode),
by = "admin4pcode") %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode")
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
select(admin1pcode, admin2pcode, admin3pcode, admin4pcode,
beneficiaries) %>%
left_join(com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode) %>%
summarise(beneficiary_frequencies = sum(beneficiaries, na.rm = TRUE),
clusters = n_distinct(cluster, na.rm = TRUE)),
by = "admin4pcode") %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(eq %>%
select(wounded_dead,
wounded_dead_100k,
damaged_houses,
damaged_houses_100k,
admin4pcode),
by = "admin4pcode") %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode")
knitr::opts_chunk$set(echo = TRUE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(scales)
library(magrittr)
library(viridis)
library(patchwork)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(magrittr)
library(readxlsb)
library(tidymodels)
library(widyr)
library(googlesheets4)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
pcode3_shape <-
sf::st_read("./data/syr_admbnda_uncs_unocha_20201217/syr_admbnda_adm3_uncs_unocha_20201217.shp",
quiet = TRUE)
nw_pcode3 <- read_excel("./data/2023HNO_PiN_Severity_detailedAoI_FORSHARE 15032023.xlsx", skip = 1,
sheet = 1) %>%
clean_names() %>%
filter(ao_c == "NW") %>%
pull(admin3pcode)
locations <- read_excel("./data/Locations.xlsx") %>%
clean_names()
pop <- read_excel("./data/Population_Data_May_2022_final_01122022_with_SADD.xlsx",
sheet = 5,
skip = 2) %>%
clean_names() %>%
select(admin0name_en:longitude_x,
final_est_of_id_ps_may_2022:family_avg_size_total_pop) %>%
rename(idps = final_est_of_id_ps_may_2022,
total_pop = final_est_of_total_pop_may_2022,
avg_family_size = family_avg_size_total_pop)
names_eq <- c(
"date",
"governorate",
"district",
"sub_district",
"community",
"admin4",
"casualties",
"injuries",
"completely_destroyed_houses",
"damaged_unihabitable_houses",
"temporary_accommodation_centres",
"idps_in_all_centres",
"schools_as_accomodation_centres",
"idps_in_schools",
"tents_needed",
"blankets_mattresses_needed",
"temporary_accommodation_centres_available",
"accessible_civil_defense",
"latrines_available",
"meals_needed_per_day",
"need_blood_donations",
"health_services_available",
"necessary_medical_equipment",
"rubble_volunteers",
"telecoms_available",
"electricity_available",
"heating_fuel_needed"
)
eq <- read_excel("./data/syria-earthquake-impact-20-march-2023.xlsx",
sheet = "DATASET") %>%
setNames(names_eq)
prot_names <- read_excel("./data/ocha_unedited/EXTERNAL_NWS_Complie_5Ws_2023_r1_v1_04042023.xlsx",
sheet = "Data entry sheet",
skip = 2) %>%
head(1) %>%
transpose_df() %>%
mutate(col_id = row_number()) %>%
mutate(rowname = gsub("\\p{Arabic}", "", rowname, perl = TRUE),
rowname = str_trim(str_replace_all(rowname, "\r\n|/|\\\\|\\*", ""))) %>%
mutate(rowname = case_when(col_id == 34 ~ "total_reached",
col_id == 18 ~ "unit",
col_id == 21 ~ "pwd",
col_id == 22 ~ "earthquake_response",
col_id == 16 ~ "service_delivery",
TRUE ~ rowname)) %>%
pull(rowname)
prot <- read_excel("./data/ocha_unedited/EXTERNAL_NWS_Complie_5Ws_2023_r1_v1_04042023.xlsx",
sheet = "Data entry sheet",
skip = 2) %>%
setNames(prot_names) %>%
clean_names() %>%
rename(admin1pcode = code_governorate,
admin2pcode = code_district,
admin3pcode = code_sub_district,
admin4pcode = code_commune_village_town,
admin5pcode = code_camps,
delivery_modality = delivery_modaity,
beneficiary_type = type_of_beneficiaries_only_if_unit_number_people,
total_achieved_as_per_unit = total_achieved_as_per_the_unit_in_the_previous_field,
hrp_project = hrp_project_or_not_yn_u_061f)
prot %>% glimpse()
prot %>% count(hrp_indicator)
prot %>% glimpse()
prot %>% count(ao_r)
prot %>%
filter(ao_r == "Child Protection" & analysis_unit == "People") %>%
summarise(beneficiaries = sum(total_reached, na.rm = TRUE)) %>%
mutate(type = "child_protection_cumulative")
prot %>% count(analysis_unit)
# Somehow the CP
prot %>%
filter(ao_r == "Child Protection" & analysis_unit == "# people") %>%
summarise(beneficiaries = sum(total_reached, na.rm = TRUE)) %>%
mutate(type = "child_protection_cumulative")
prot %>%
filter(ao_r == "Child Protection" & analysis_unit == "# people") %>%
summarise(beneficiaries = sum(total_reached, na.rm = TRUE),
interventions = sum(total_cumulative_interventions, na.rm = TRUE)) %>%
mutate(type = "child_protection_cumulative")
prot %>% count(hrp_indicator)
prot %>% glimpse()
prot %>% count(analysis_unit)
prot %>% glimpse()
prot %>% count(ao_r)
prot %>%
count(ao_r)
pop %>% glimpse()
reference_table <- com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
select(admin1pcode, admin2pcode, admin3pcode, admin4pcode,
beneficiaries) %>%
left_join(com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode) %>%
summarise(beneficiary_frequencies = sum(beneficiaries, na.rm = TRUE),
clusters = n_distinct(cluster, na.rm = TRUE)),
by = "admin4pcode") %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(eq %>%
select(wounded_dead,
wounded_dead_100k,
damaged_houses,
damaged_houses_100k,
admin4pcode),
by = "admin4pcode") %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode")
eq
eq <- read_excel("./data/syria-earthquake-impact-20-march-2023.xlsx",
sheet = "DATASET") %>%
setNames(names_eq) %>%
left_join(pop %>%
select(admin4pcode, total_pop),
by = "admin4pcode") %>%
mutate(wounded_dead = casualties + injuries,
damaged_houses = completely_destroyed_houses + damaged_unihabitable_houses) %>%
mutate(wounded_dead_100k = wounded_dead / total_pop * 100000,
damaged_houses_100k = damaged_houses / total_pop * 100000)
eq <- read_excel("./data/syria-earthquake-impact-20-march-2023.xlsx",
sheet = "DATASET") %>%
setNames(names_eq) %>%
left_join(pop %>%
select(admin4pcode, total_pop),
by = "admin4pcode") %>%
mutate(wounded_dead = casualties + injuries,
damaged_houses = completely_destroyed_houses + damaged_unihabitable_houses) %>%
mutate(wounded_dead_100k = wounded_dead / total_pop * 100000,
damaged_houses_100k = damaged_houses / total_pop * 100000)
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
