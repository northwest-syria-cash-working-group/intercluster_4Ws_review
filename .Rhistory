library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(scales)
library(magrittr)
library(viridis)
library(patchwork)
library(DT)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(magrittr)
library(readxlsb)
library(tidymodels)
library(widyr)
library(tidytext)
library(treemapify)
library(mdepriv)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# Hopefully this allows the DT to show up
options(htmltools.preserve.raw = FALSE)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
com %>%
filter(activity != "ISIMM") %>%
group_by(cluster, admin4pcode) %>%
summarise(count = n()) %>%
pairwise_cor(cluster, admin4pcode, value = count,
method = c("spearman"), upper = FALSE) %>%
arrange(desc(correlation)) %>%
left_join(
com %>%
filter(activity != "ISIMM") %>%
pairwise_count(cluster, admin4pcode),
by = c("item1", "item2")
) %>%
rename(cluster1 = item1,
cluster2 = item2,
communities = n) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
head(15) %>%
flextable()
com %>%
filter(activity != "ISIMM") %>%
group_by(cluster, admin4pcode) %>%
summarise(count = n()) %>%
pairwise_cor(cluster, admin4pcode, value = count,
method = c("spearman"), upper = FALSE) %>%
arrange(desc(correlation)) %>%
left_join(
com %>%
filter(activity != "ISIMM") %>%
pairwise_count(cluster, admin4pcode),
by = c("item1", "item2")
) %>%
rename(cluster1 = item1,
cluster2 = item2,
communities = n) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
head(10) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Most common cluster pairs") %>%
set_table_properties(layout = "autofit", width = .7)
com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_count(activity, admin4pcode, sort = TRUE, upper = FALSE) %>%
left_join(com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_cor(activity, admin4pcode, sort = TRUE, upper = FALSE),
by = c("item1", "item2")) %>%
left_join(com %>%
distinct(cluster1 = cluster, activity),
by = c("item1" = "activity")) %>%
left_join(com %>%
distinct(cluster2 = cluster, activity),
by = c("item2" = "activity")) %>%
filter(cluster1 != cluster2) %>%
rename(activity1 = item1,
activity2 = item2) %>%
mutate_at(vars(activity1, activity2), ~ str_sub(., start = 0L, end = 50L)) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
select(activity1, activity2, corr = correlation, `comm.` = n, cluster1, cluster2) %>%
arrange(desc(corr)) %>%
filter(`comm.` > 20)  %>%
head(1o)
com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_count(activity, admin4pcode, sort = TRUE, upper = FALSE) %>%
left_join(com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_cor(activity, admin4pcode, sort = TRUE, upper = FALSE),
by = c("item1", "item2")) %>%
left_join(com %>%
distinct(cluster1 = cluster, activity),
by = c("item1" = "activity")) %>%
left_join(com %>%
distinct(cluster2 = cluster, activity),
by = c("item2" = "activity")) %>%
filter(cluster1 != cluster2) %>%
rename(activity1 = item1,
activity2 = item2) %>%
mutate_at(vars(activity1, activity2), ~ str_sub(., start = 0L, end = 50L)) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
select(activity1, activity2, corr = correlation, `comm.` = n, cluster1, cluster2) %>%
arrange(desc(corr)) %>%
filter(`comm.` > 20)  %>%
head(10)
com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_count(activity, admin4pcode, sort = TRUE, upper = FALSE) %>%
left_join(com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_cor(activity, admin4pcode, sort = TRUE, upper = FALSE),
by = c("item1", "item2")) %>%
left_join(com %>%
distinct(cluster1 = cluster, activity),
by = c("item1" = "activity")) %>%
left_join(com %>%
distinct(cluster2 = cluster, activity),
by = c("item2" = "activity")) %>%
filter(cluster1 != cluster2) %>%
rename(activity1 = item1,
activity2 = item2) %>%
mutate_at(vars(activity1, activity2), ~ str_sub(., start = 0L, end = 50L)) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
select(activity1, activity2, corr = correlation, `comm.` = n, cluster1, cluster2) %>%
arrange(desc(corr)) %>%
filter(`comm.` > 20)  %>%
head(10) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Most common activity pairs") %>%
set_table_properties(layout = "autofit", width = .7)
com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_count(activity, admin4pcode, sort = TRUE, upper = FALSE) %>%
left_join(com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_cor(activity, admin4pcode, sort = TRUE, upper = FALSE),
by = c("item1", "item2")) %>%
left_join(com %>%
distinct(cluster1 = cluster, activity),
by = c("item1" = "activity")) %>%
left_join(com %>%
distinct(cluster2 = cluster, activity),
by = c("item2" = "activity")) %>%
filter(cluster1 != cluster2) %>%
rename(activity1 = item1,
activity2 = item2) %>%
mutate_at(vars(activity1, activity2), ~ str_sub(., start = 0L, end = 50L)) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
select(activity1, activity2, corr = correlation, `comm.` = n, cluster1, cluster2) %>%
arrange(desc(corr)) %>%
filter(`comm.` > 20)  %>%
head(10) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Most common activity pairs") %>%
set_table_properties(layout = "autofit", width = .99)
com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_count(activity, admin4pcode, sort = TRUE, upper = FALSE) %>%
left_join(com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_cor(activity, admin4pcode, sort = TRUE, upper = FALSE),
by = c("item1", "item2")) %>%
left_join(com %>%
distinct(cluster1 = cluster, activity),
by = c("item1" = "activity")) %>%
left_join(com %>%
distinct(cluster2 = cluster, activity),
by = c("item2" = "activity")) %>%
filter(cluster1 != cluster2) %>%
rename(activity1 = item1,
activity2 = item2) %>%
mutate_at(vars(activity1, activity2), ~ str_sub(., start = 0L, end = 60L)) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
select(activity1, activity2, corr = correlation, `comm.` = n, cluster1, cluster2) %>%
arrange(desc(corr)) %>%
filter(`comm.` > 20)  %>%
head(10) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Most common activity pairs") %>%
set_table_properties(layout = "autofit", width = .99)
com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_count(activity, admin4pcode, sort = TRUE, upper = FALSE) %>%
left_join(com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_cor(activity, admin4pcode, sort = TRUE, upper = FALSE),
by = c("item1", "item2")) %>%
left_join(com %>%
distinct(cluster1 = cluster, activity),
by = c("item1" = "activity")) %>%
left_join(com %>%
distinct(cluster2 = cluster, activity),
by = c("item2" = "activity")) %>%
filter(cluster1 != cluster2) %>%
rename(activity1 = item1,
activity2 = item2) %>%
mutate_at(vars(activity1, activity2), ~ str_sub(., start = 0L, end = 60L)) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
select(activity1, activity2, corr = correlation, `com.` = n, cluster1, cluster2) %>%
arrange(desc(`com.`)) %>%
filter(`comm.` > 20)  %>%
head(10) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Most correlated activity pairs") %>%
set_table_properties(layout = "autofit", width = .99)
com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_count(activity, admin4pcode, sort = TRUE, upper = FALSE) %>%
left_join(com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_cor(activity, admin4pcode, sort = TRUE, upper = FALSE),
by = c("item1", "item2")) %>%
left_join(com %>%
distinct(cluster1 = cluster, activity),
by = c("item1" = "activity")) %>%
left_join(com %>%
distinct(cluster2 = cluster, activity),
by = c("item2" = "activity")) %>%
filter(cluster1 != cluster2) %>%
rename(activity1 = item1,
activity2 = item2) %>%
mutate_at(vars(activity1, activity2), ~ str_sub(., start = 0L, end = 60L)) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
select(activity1, activity2, corr = correlation, `com.` = n, cluster1, cluster2) %>%
arrange(desc(`com.`)) %>%
filter(`com.` > 20)  %>%
head(10) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Most common activity pairs") %>%
set_table_properties(layout = "autofit", width = .99)
com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_count(activity, admin4pcode, sort = TRUE, upper = FALSE) %>%
left_join(com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_cor(activity, admin4pcode, sort = TRUE, upper = FALSE),
by = c("item1", "item2")) %>%
left_join(com %>%
distinct(cluster1 = cluster, activity),
by = c("item1" = "activity")) %>%
left_join(com %>%
distinct(cluster2 = cluster, activity),
by = c("item2" = "activity")) %>%
filter(cluster1 != cluster2) %>%
rename(activity1 = item1,
activity2 = item2) %>%
mutate_at(vars(activity1, activity2), ~ str_sub(., start = 0L, end = 60L)) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
select(activity1, activity2, corr = correlation, `com.` = n, cluster1, cluster2) %>%
arrange(desc(corr)) %>%
filter(`com.` > 20)  %>%
head(10) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Most correlated activity pairs") %>%
set_table_properties(layout = "autofit", width = .99)
com %>%
filter(project_status %in% c("Completed", "Ongoing")) %>%
filter(delivery_modality %in% c("Cash", "Voucher")) %>%
group_by(activity, cluster) %>%
summarise(beneficiary_frequencies = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(total_usd, na.rm = TRUE)) %>%
ungroup() %>%
mutate(activity = ifelse(activity == "Cash Response Low",
"Cash Response non-MPC",
activity)) %>%
arrange(desc(beneficiary_frequencies)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Breakdown of CVA by activity") %>%
set_table_properties(layout = "autofit", width = .99)
com %>%
filter(project_status %in% c("Completed", "Ongoing")) %>%
filter(delivery_modality %in% c("Cash", "Voucher")) %>%
group_by(activity, cluster) %>%
summarise(beneficiary_frequencies = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(total_usd, na.rm = TRUE)) %>%
ungroup() %>%
mutate(activity = ifelse(activity == "Cash Response Low",
"Cash Response non-MPC",
activity),
activity = str_replace_all(activity,
"Activity 2.02 ", "")) %>%
arrange(desc(beneficiary_frequencies)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Breakdown of CVA by activity") %>%
set_table_properties(layout = "autofit", width = .99)
com %>%
filter(project_status %in% c("Completed", "Ongoing")) %>%
filter(delivery_modality %in% c("Cash", "Voucher")) %>%
group_by(activity, cluster) %>%
summarise(beneficiary_freq = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(total_usd, na.rm = TRUE)) %>%
ungroup() %>%
mutate(activity = ifelse(activity == "Cash Response Low",
"Cash Response non-MPC",
activity),
activity = str_replace_all(activity,
"Activity 2.02 ", "")) %>%
arrange(desc(beneficiary_freq)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Breakdown of CVA by activity") %>%
set_table_properties(layout = "autofit", width = .99)
eq_pc_ben_means <- com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
summarise(pc_ben = mean(pc_ben, na.rm = TRUE),
eq_score = mean(eq_score, na.rm = TRUE),
pc_reached = mean(pc_reached, na.rm = TRUE))
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_reached, y = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_reached),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_hline(aes(yintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_point(aes(size = eq_score)) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50") +
labs(title = "Partners should prioritse communities in upper-left quadrant",
subtitle = "Followed by the lower-left quadrant\nBlue lines are means",
x = "% of total beneficiaries",
y = "Earthquake score",
size = "EQ\nscore")
eq_pc_ben_means <- com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
summarise(pc_ben = mean(pc_ben, na.rm = TRUE),
eq_score = mean(eq_score, na.rm = TRUE),
pc_reached = mean(pc_reached, na.rm = TRUE))
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_reached, y = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_reached),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_hline(aes(yintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_point(aes(size = eq_score)) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50") +
labs(title = "Partners should prioritse communities in upper-left quadrant",
subtitle = "Followed by the lower-left quadrant\nBlue lines are means",
x = "% of total beneficiaries",
y = "Earthquake score",
size = "EQ\nscore")
eq_pc_ben_means
eq_pc_ben_means <- com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
summarise(pc_ben = mean(pc_ben, na.rm = TRUE),
eq_score = mean(eq_score, na.rm = TRUE),
pc_reached = mean(pc_reached[!is.infinite(pc_reached)], na.rm = TRUE))
eq_pc_ben_means <- com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
summarise(pc_ben = mean(pc_ben, na.rm = TRUE),
eq_score = mean(eq_score, na.rm = TRUE),
pc_reached = mean(pc_reached[!is.infinite(pc_reached)], na.rm = TRUE))
eq_pc_ben_means
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_reached, y = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_reached),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_hline(aes(yintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_point(aes(size = eq_score)) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50") +
labs(title = "Partners should prioritse communities in upper-left quadrant",
subtitle = "Followed by the lower-left quadrant\nBlue lines are means",
x = "% of total beneficiaries",
y = "Earthquake score",
size = "EQ\nscore")
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_reached, y = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_ben),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_hline(aes(yintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_point(aes(size = eq_score)) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50") +
labs(title = "Partners should prioritse communities in upper-left quadrant",
subtitle = "Followed by the lower-left quadrant\nBlue lines are means",
x = "% of total beneficiaries",
y = "Earthquake score",
size = "EQ\nscore")
com %>%
eq_plot_prep() %>%
ungroup() %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = pc_ben, y = eq_score)) +
scale_x_log10(labels = percent) +
scale_y_log10() +
geom_vline(aes(xintercept = pc_ben),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_hline(aes(yintercept = eq_score),
data = eq_pc_ben_means,
lty = 2, colour = "blue", alpha = .6, size = 1) +
geom_point(aes(size = eq_score)) +
geom_text_repel(aes(label = admin4pcode),
size = 2, colour = "grey50") +
labs(title = "Partners should prioritse communities in upper-left quadrant",
subtitle = "Followed by the lower-left quadrant\nBlue lines are means",
x = "% of total beneficiaries",
y = "Earthquake score",
size = "EQ\nscore")
