ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE))
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",")
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
rename(frequencies = beneficiary_frequencies) %>%
arrange(desc(frequencies)) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
arrange(desc(frequencies)) %>%
select(district, sub_district, community,
Cash, Education, FSL,
Nutrition, Protection, SNFI,
WASH, CCCM, ERL, beneficiary_frequencies) %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
arrange(desc(beneficiary_frequencies)) %>%
select(district, sub_district, community,
Cash, Education, FSL,
Nutrition, Protection, SNFI,
WASH, CCCM, ERL, beneficiary_frequencies) %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
arrange(desc(beneficiary_frequencies)) %>%
select(district, sub_district, community,
Cash, Education, FSL,
Nutrition, Protection, SNFI,
WASH, CCCM, ERL,
beneficiary_frequencies, total_pop,
admin4pcode) %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
arrange(desc(beneficiary_frequencies)) %>%
select(district, sub_district, community,
Cash, Education, FSL,
Nutrition, Protection, SNFI,
WASH, CCCM, ERL,
beneficiary_frequencies, total_pop,
admin4pcode) %>%
write_csv("./data/admin4_cluster_beneficiary_frequencies.csv")
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
arrange(desc(beneficiary_frequencies)) %>%
select(district, sub_district, community,
Cash, Education, FSL,
Nutrition, Protection, SNFI,
WASH, CCCM, ERL,
beneficiary_frequencies, total_pop,
admin4pcode) %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
mutate(no_admin5 = ifelse(is.na(admin5pcode),
"has_admin5",
"no_admin5")) %>%
filter(activity != "ISIMM") %>%
group_by(cluster, no_admin5) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
pivot_wider(names_from = no_admin5, values_from = beneficiaries) %>%
mutate(total_frequencies = sum(has_admin5, no_admin5, na.rm = TRUE),
pc_missing = round(has_admin5 / total_frequencies * 100, digits = 2)) %>%
select(-total_frequencies) %>%
flextable() %>%
theme_zebra() %>%
set_caption("The impracticality of requiring partners to report at admin5") %>%
set_table_properties(layout = "autofit", width = .8)
tribble(
~acronym, ~name,
"CCCM", "Camp Management and Camp Coordination",
"CVA", "Cash and Voucher Assistance",
"CWG", "Cash Working Group",
"ERL", "Early Recovery and Livelihoods",
"FSL", "Food Security and Livelihoods",
"HNAP", "Humanitarian Needs Assessment Programme",
"HNO", "Humanitarian Needs Overview",
"HRP", "Humanitarian Response Plan",
"IDP", "Internally Displaced Person",
"MPC", "Multipurpose Cash",
"MSNA", "Multisector Needs Assessment",
"NWS", "Northwest Syria",
"OCHA", "UN Office for the Coordination of Humanitarian Affairs",
"SNFI", "Shelter and Non-Food Items",
"SWM", "Solid Waste Management",
"WASH", "Water, Sanitation and Hygiene"
) %>%
flextable() %>%
set_caption(as_paragraph(as_b("Acronyms"))) %>%
hline_top(border = fp_border_default(width = 0),
part = "header") %>%
set_table_properties(layout = "autofit") %>%
fontsize(j = 1:2, size = 10) %>%
fontsize(j = 1:2, size = 10, part = "header") %>%
line_spacing(part = "all", space = .25)
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(scales)
library(magrittr)
library(viridis)
library(patchwork)
library(DT)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(magrittr)
library(readxlsb)
library(tidymodels)
library(widyr)
library(tidytext)
library(treemapify)
library(mdepriv)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
pcode3_shape <-
sf::st_read("./data/syr_admbnda_uncs_unocha_20201217/syr_admbnda_adm3_uncs_unocha_20201217.shp",
quiet = TRUE)
nw_pcode3 <- read_excel("./data/2023HNO_PiN_Severity_detailedAoI_FORSHARE 15032023.xlsx", skip = 1,
sheet = 1) %>%
clean_names() %>%
filter(ao_c == "NW") %>%
pull(admin3pcode)
locations <- read_excel("./data/Locations.xlsx") %>%
clean_names()
pop <- read_excel("./data/Population_Data_May_2022_final_01122022_with_SADD.xlsx",
sheet = 5,
skip = 2) %>%
clean_names() %>%
select(admin0name_en:longitude_x,
final_est_of_id_ps_may_2022:family_avg_size_total_pop) %>%
rename(idps = final_est_of_id_ps_may_2022,
total_pop = final_est_of_total_pop_may_2022,
avg_family_size = family_avg_size_total_pop) %>%
filter(admin3pcode %in% nw_pcode3)
names_eq <- c(
"date",
"governorate",
"district",
"sub_district",
"community",
"admin4pcode",
"casualties",
"injuries",
"completely_destroyed_houses",
"damaged_unihabitable_houses",
"temporary_accommodation_centres",
"idps_in_all_centres",
"schools_as_accomodation_centres",
"idps_in_schools",
"tents_needed",
"blankets_mattresses_needed",
"temporary_accommodation_centres_available",
"accessible_civil_defense",
"latrines_available",
"meals_needed_per_day",
"need_blood_donations",
"health_services_available",
"necessary_medical_equipment",
"rubble_volunteers",
"telecoms_available",
"electricity_available",
"heating_fuel_needed"
)
eq <- read_excel("./data/syria-earthquake-impact-20-march-2023.xlsx",
sheet = "DATASET") %>%
setNames(names_eq) %>%
left_join(pop %>%
select(admin4pcode, total_pop),
by = "admin4pcode") %>%
mutate(wounded_dead = casualties + injuries,
damaged_houses = completely_destroyed_houses + damaged_unihabitable_houses) %>%
mutate(wounded_dead_100k = wounded_dead / total_pop * 100000,
damaged_houses_100k = damaged_houses / total_pop * 100000)
com <- read_csv("./data/com.csv")
eq_score <- eq %>%
filter(!is.infinite(wounded_dead_100k) & !is.infinite(damaged_houses_100k)) %>%
mutate_at(vars(wounded_dead, damaged_houses,
wounded_dead_100k, damaged_houses_100k), ~ range_wna(.)) %>%
replace_na(list(wounded_dead_100k = 0,
damaged_houses_100k = 0,
wounded_dead = 0,
damaged_houses = 0)) %>%
mdepriv(c("wounded_dead", "damaged_houses",
"wounded_dead_100k", "damaged_houses_100k"),
method = "bv", output = "all",
score_i_heading = "eq_score")
reference_table <- com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
select(admin1pcode, admin2pcode, admin3pcode, admin4pcode,
beneficiaries) %>%
left_join(com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode) %>%
summarise(beneficiary_frequencies = sum(beneficiaries, na.rm = TRUE),
clusters = n_distinct(cluster, na.rm = TRUE)),
by = "admin4pcode") %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(eq %>%
select(wounded_dead,
wounded_dead_100k,
damaged_houses,
damaged_houses_100k,
admin4pcode),
by = "admin4pcode") %>%
left_join(eq_score$data %>%
select(eq_score, admin4pcode),
by = "admin4pcode")
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
{n_distinct(.$admin4pcode)}
com %>%
filter(!is.na(admin4pcode) &
activity != "ISIMM" &
project_status %in% c("Completed", "Ongoing")) %>%
# Maximum of beneficiaries of
# any activity of any cluster, at admin4
group_by(admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
left_join(
com %>%
filter(project_status %in% c("Completed", "Ongoing") & activity != "ISIMM") %>%
filter(delivery_modality %in% c("Cash", "Voucher") | cluster == "Cash") %>%
group_by(admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
select(cash_beneficiaries = beneficiaries, admin4pcode),
by = "admin4pcode"
) %>%
summarise(cash_beneficiaries = sum(cash_beneficiaries, na.rm = TRUE),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(cash_pc = round(cash_beneficiaries / beneficiaries * 100), digits = 2)
com %>%
filter(!is.na(admin4pcode) &
activity != "ISIMM" &
project_status %in% c("Completed", "Ongoing")) %>%
# Maximum of beneficiaries of
# any activity of any cluster, at admin4
group_by(admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
left_join(
com %>%
filter(project_status %in% c("Completed", "Ongoing") & activity != "ISIMM") %>%
filter(delivery_modality %in% c("Cash", "Voucher") | cluster == "Cash") %>%
group_by(admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
select(cash_beneficiaries = beneficiaries, admin4pcode),
by = "admin4pcode"
) %>%
summarise(cash_beneficiaries = sum(cash_beneficiaries, na.rm = TRUE),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(cash_pc = round(cash_beneficiaries / beneficiaries * 100, digits = 2))
locations <- read_csv("./data/locations_aoc.csv")
aoc_nws<- read_csv("./data/aoc_nws.csv")
aoc_nws %>% glimpse()
![](./img/modality_preferences.png)
