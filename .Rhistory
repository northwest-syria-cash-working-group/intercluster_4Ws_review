adorn_totals("row") %>%
mutate(usd_per_hhd = round(total_usd / hhd, digits = 2),
hhd = round(hhd)) %>%
rename(`cluster/WG` = cluster) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Total USD disbursed and beneficiary frequencies") %>%
set_table_properties(layout = "autofit", width = .6) %>%
footnote(i = 4, j = 5, ref_symbols = "1",
as_paragraph("Only refers to direct beneficiaries"))
com %>%
filter(activity != "ISIMM") %>%
group_by(cluster, admin4pcode) %>%
summarise(count = n()) %>%
pairwise_cor(cluster, admin4pcode, value = count,
method = c("spearman"), upper = FALSE) %>%
arrange(desc(correlation)) %>%
left_join(
com %>%
filter(activity != "ISIMM") %>%
pairwise_count(cluster, admin4pcode),
by = c("item1", "item2")
) %>%
rename(cluster1 = item1,
cluster2 = item2,
communities = n) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
#head(10) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Most correlated cluster pairs") %>%
set_table_properties(layout = "autofit", width = .7)
com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_count(activity, admin4pcode, sort = TRUE, upper = FALSE) %>%
left_join(com %>%
filter(activity != "ISIMM") %>%
filter(!is.na(admin4pcode) & !is.na(activity)) %>%
pairwise_cor(activity, admin4pcode, sort = TRUE, upper = FALSE),
by = c("item1", "item2")) %>%
left_join(com %>%
distinct(cluster1 = cluster, activity),
by = c("item1" = "activity")) %>%
left_join(com %>%
distinct(cluster2 = cluster, activity),
by = c("item2" = "activity")) %>%
filter(cluster1 != cluster2) %>%
rename(activity1 = item1,
activity2 = item2) %>%
mutate_at(vars(activity1, activity2), ~ str_sub(., start = 0L, end = 60L)) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
select(activity1, activity2, corr = correlation, `com.` = n, cluster1, cluster2) %>%
arrange(desc(corr)) %>%
filter(`com.` > 20)  %>%
# head(10) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Most correlated activity pairs") %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(size = 9, j = 1:2)
com %>%
filter(activity != "ISIMM") %>%
group_by(cluster, admin4pcode) %>%
summarise(count = n()) %>%
pairwise_cor(cluster, admin4pcode, value = count,
method = c("spearman"), upper = FALSE) %>%
arrange(desc(correlation)) %>%
left_join(
com %>%
filter(activity != "ISIMM") %>%
pairwise_count(cluster, admin4pcode),
by = c("item1", "item2")
) %>%
rename(cluster1 = item1,
cluster2 = item2,
communities = n) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
filter(cluster1 == "CWG" | cluster2 == "CWG") %>%
flextable() %>%
theme_zebra() %>%
set_caption("Most correlated cluster pairs") %>%
set_table_properties(layout = "autofit", width = .7)
com %>%
filter(activity %in% c("Food Baskets", "Multipurpose cash")) %>%
group_by(admin4pcode) %>%
summarise(food_basket = sum(beneficiaries[activity == "Food Baskets"], na.rm = TRUE),
mpc = sum(beneficiaries[activity == "Multipurpose cash"], na.rm = TRUE)) %>%
left_join(pop %>%
select(total_pop, admin4pcode),
by = "admin4pcode") %>%
mutate(both = ifelse(mpc > 0 & food_basket > 0, TRUE, FALSE),
over = ifelse((mpc + food_basket) > total_pop,
TRUE, FALSE))
com %>%
filter(activity %in% c("Food Baskets", "Multipurpose cash")) %>%
group_by(admin4pcode) %>%
summarise(food_basket = sum(beneficiaries[activity == "Food Baskets"], na.rm = TRUE),
mpc = sum(beneficiaries[activity == "Multipurpose cash"], na.rm = TRUE)) %>%
left_join(pop %>%
select(total_pop, admin4pcode),
by = "admin4pcode") %>%
mutate(both = ifelse(mpc > 0 & food_basket > 0, TRUE, FALSE),
over = ifelse((mpc + food_basket) > total_pop,
TRUE, FALSE)) %>%
filter(mpc > 0)
com %>%
filter(activity %in% c("Food Baskets", "Multipurpose cash")) %>%
group_by(admin4pcode) %>%
summarise(food_basket = sum(beneficiaries[activity == "Food Baskets"], na.rm = TRUE),
mpc = sum(beneficiaries[activity == "Multipurpose cash"], na.rm = TRUE)) %>%
left_join(pop %>%
select(total_pop, admin4pcode),
by = "admin4pcode") %>%
mutate(both = ifelse(mpc > 0 & food_basket > 0, TRUE, FALSE),
over = ifelse((mpc + food_basket) > total_pop,
TRUE, FALSE)) %>%
filter(mpc > 0 & food_basket > 0)
com %>%
filter(activity %in% c("Food Baskets", "Multipurpose cash")) %>%
group_by(admin4pcode) %>%
summarise(food_basket = sum(beneficiaries[activity == "Food Baskets"], na.rm = TRUE),
mpc = sum(beneficiaries[activity == "Multipurpose cash"], na.rm = TRUE)) %>%
left_join(pop %>%
select(total_pop, admin4pcode),
by = "admin4pcode") %>%
mutate(both = ifelse(mpc > 0 & food_basket > 0, TRUE, FALSE),
over = ifelse((mpc + food_basket) > total_pop,
TRUE, FALSE)) %>%
filter(mpc > 0 )
com %>%
filter(activity %in% c("Food Baskets", "Multipurpose cash")) %>%
group_by(admin4pcode) %>%
summarise(food_basket = sum(beneficiaries[activity == "Food Baskets"], na.rm = TRUE),
mpc = sum(beneficiaries[activity == "Multipurpose cash"], na.rm = TRUE)) %>%
left_join(pop %>%
select(total_pop, admin4pcode),
by = "admin4pcode") %>%
mutate(both = ifelse(mpc > 0 & food_basket > 0, TRUE, FALSE),
over = ifelse((mpc + food_basket) > total_pop,
TRUE, FALSE)) %>%
filter(food_basket > 0 )
com %>%
filter(activity %in% c("Food Baskets", "Multipurpose cash")) %>%
group_by(admin4pcode) %>%
summarise(food_basket = sum(beneficiaries[activity == "Food Baskets"], na.rm = TRUE),
mpc = sum(beneficiaries[activity == "Multipurpose cash"], na.rm = TRUE)) %>%
left_join(pop %>%
select(total_pop, admin4pcode),
by = "admin4pcode") %>%
mutate(both = ifelse(mpc > 0 & food_basket > 0, TRUE, FALSE),
over = ifelse((mpc + food_basket) > total_pop,
TRUE, FALSE)) %>%
filter(food_basket > 0 )
com %>%
filter(activity %in% c("Food Baskets", "Multipurpose cash")) %>%
group_by(admin4pcode) %>%
summarise(food_basket = sum(beneficiaries[activity == "Food Baskets"], na.rm = TRUE),
mpc = sum(beneficiaries[activity == "Multipurpose cash"], na.rm = TRUE)) %>%
left_join(pop %>%
select(total_pop, admin4pcode),
by = "admin4pcode") %>%
mutate(both = ifelse(mpc > 0 & food_basket > 0, TRUE, FALSE),
over = ifelse((mpc + food_basket) > total_pop,
TRUE, FALSE)) %>%
filter(food_basket > 0 & both == TRUE)
com %>%
filter(activity %in% c("Food Baskets", "Multipurpose cash")) %>%
group_by(admin4pcode) %>%
summarise(food_basket = sum(beneficiaries[activity == "Food Baskets"], na.rm = TRUE),
mpc = sum(beneficiaries[activity == "Multipurpose cash"], na.rm = TRUE)) %>%
left_join(pop %>%
select(total_pop, admin4pcode),
by = "admin4pcode")
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "Cash" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
clusters = n_distinct(cluster)) %>%
arrange(desc(beneficiaries)) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
cum_pc = cumsum(pc_ben)) %>%
ggplot(aes(area = beneficiaries, fill = clusters)) +
geom_treemap() +
geom_treemap_text(aes(label = admin4pcode), colour = "white", place = "centre", grow = TRUE) +
scale_fill_viridis_c(option = "mako", direction = -1, end = .8) +
theme(legend.position = "none",
plot.caption = element_text(hjust = .5)) +
labs(title = "% of MPC beneficiary frequencies per community",
subtitle = "The top 10 communities form 50% of all beneficiary allocations",
caption = "Each tile is a single community. The darker the colour and the larger the tile, the higher the share of beneficiary allocations.")
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "Cash" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
clusters = n_distinct(cluster)) %>%
arrange(desc(beneficiaries)) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
cum_pc = cumsum(pc_ben)) %>%
ggplot(aes(area = beneficiaries, fill = beneficiaries)) +
geom_treemap() +
geom_treemap_text(aes(label = admin4pcode), colour = "white", place = "centre", grow = TRUE) +
scale_fill_viridis_c(option = "mako", direction = -1, end = .8) +
theme(legend.position = "none",
plot.caption = element_text(hjust = .5)) +
labs(title = "% of MPC beneficiary frequencies per community",
subtitle = "The top 10 communities form 50% of all beneficiary allocations",
caption = "Each tile is a single community. The darker the colour and the larger the tile, the higher the share of beneficiary allocations.")
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "Cash" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
clusters = n_distinct(cluster))
com
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "CWG" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
clusters = n_distinct(cluster)) %>%
arrange(desc(beneficiaries)) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
cum_pc = cumsum(pc_ben)) %>%
ggplot(aes(area = beneficiaries, fill = clusters)) +
geom_treemap() +
geom_treemap_text(aes(label = admin4pcode), colour = "white", place = "centre", grow = TRUE) +
scale_fill_viridis_c(option = "mako", direction = -1, end = .8) +
theme(legend.position = "none",
plot.caption = element_text(hjust = .5)) +
labs(title = "% of MPC beneficiary frequencies per community",
subtitle = "The top 10 communities form 50% of all beneficiary allocations",
caption = "Each tile is a single community. The darker the colour and the larger the tile, the higher the share of beneficiary allocations.")
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "CWG" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
left_join(com %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
group_by(admin4pcode) %>%
summarise(clusters = n_distinct(cluster)),
by = "admin4pode") %>%
arrange(desc(beneficiaries)) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
cum_pc = cumsum(pc_ben)) %>%
ggplot(aes(area = beneficiaries, fill = clusters)) +
geom_treemap() +
geom_treemap_text(aes(label = admin4pcode), colour = "white", place = "centre", grow = TRUE) +
scale_fill_viridis_c(option = "mako", direction = -1, end = .8) +
theme(legend.position = "none",
plot.caption = element_text(hjust = .5)) +
labs(title = "% of MPC beneficiary frequencies per community",
subtitle = "The top 10 communities form 50% of all beneficiary allocations",
caption = "Each tile is a single community. The darker the colour and the larger the tile, the higher the share of beneficiary allocations.")
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "CWG" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
left_join(com %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
group_by(admin4pcode) %>%
summarise(clusters = n_distinct(cluster)),
by = "admin4pcode") %>%
arrange(desc(beneficiaries)) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
cum_pc = cumsum(pc_ben)) %>%
ggplot(aes(area = beneficiaries, fill = clusters)) +
geom_treemap() +
geom_treemap_text(aes(label = admin4pcode), colour = "white", place = "centre", grow = TRUE) +
scale_fill_viridis_c(option = "mako", direction = -1, end = .8) +
theme(legend.position = "none",
plot.caption = element_text(hjust = .5)) +
labs(title = "% of MPC beneficiary frequencies per community",
subtitle = "The top 10 communities form 50% of all beneficiary allocations",
caption = "Each tile is a single community. The darker the colour and the larger the tile, the higher the share of beneficiary allocations.")
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "CWG" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
left_join(com %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
group_by(admin4pcode) %>%
summarise(clusters = n_distinct(cluster)),
by = "admin4pcode") %>%
arrange(desc(beneficiaries)) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
cum_pc = cumsum(pc_ben)) %>%
ggplot(aes(area = beneficiaries, fill = clusters)) +
geom_treemap() +
geom_treemap_text(aes(label = admin4pcode), colour = "white", place = "centre", grow = TRUE) +
scale_fill_viridis_c(option = "mako", direction = -1, end = .8) +
theme(plot.caption = element_text(hjust = .5)) +
labs(title = "% of MPC beneficiary frequencies per community",
subtitle = "The top 10 communities form 50% of all beneficiary allocations",
caption = "Each tile is a single community. The darker the colour and the larger the tile, the higher the share of beneficiary allocations.")
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "CWG" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
left_join(com %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
group_by(admin4pcode) %>%
summarise(clusters = n_distinct(cluster)),
by = "admin4pcode") %>%
arrange(desc(beneficiaries)) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
cum_pc = cumsum(pc_ben)) %>%
ggplot(aes(area = beneficiaries, fill = clusters)) +
geom_treemap() +
geom_treemap_text(aes(label = admin4pcode), colour = "white", place = "centre", grow = TRUE) +
scale_fill_viridis_c(option = "mako", direction = -1, end = .8,
breaks = c(1, 3, 6, 9)) +
theme(plot.caption = element_text(hjust = .5)) +
labs(title = "% of MPC beneficiary frequencies per community",
subtitle = "The top 10 communities form 50% of all beneficiary allocations",
caption = "Each tile is a single community. The darker the colour and the larger the tile, the higher the share of beneficiary allocations.")
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "CWG" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
left_join(com %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
group_by(admin4pcode) %>%
summarise(clusters = n_distinct(cluster)),
by = "admin4pcode") %>%
arrange(desc(beneficiaries)) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
cum_pc = cumsum(pc_ben)) %>%
ggplot(aes(area = beneficiaries, fill = clusters)) +
geom_treemap() +
geom_treemap_text(aes(label = admin4pcode), colour = "white", place = "centre", grow = TRUE) +
scale_fill_viridis_c(option = "mako", direction = -1,
breaks = c(1, 3, 6, 9)) +
theme(plot.caption = element_text(hjust = .5)) +
labs(title = "% of MPC beneficiary frequencies per community",
subtitle = "The top 10 communities form 50% of all beneficiary allocations",
caption = "Each tile is a single community. The darker the colour and the larger the tile, the higher the share of beneficiary allocations.")
com %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
clusters = n_distinct(cluster)) %>%
left_join(pop %>% select(total_pop, admin4pcode, community = admin4name_en),
by = "admin4pcode") %>%
mutate(pc_ben = beneficiaries / sum(beneficiaries),
pc_pop = total_pop / sum(total_pop, na.rm = TRUE)) %>%
filter(beneficiaries > 0) %>%
ggplot(aes(x = total_pop, y = beneficiaries)) +
annotate(geom = "rect",
xmin = 3917, xmax = 249009,
ymin = 350700, ymax = 1983254,
colour = "goldenrod", alpha = 0) +
geom_point(aes(size = beneficiaries,
colour = clusters),
alpha = .7) +
scale_colour_viridis(option = "mako", direction = -1,
breaks = c(1, 3, 6, 9)) +
scale_size_continuous(breaks = c(100, 1000, 10000, 100000, 300000, 750000),
labels = comma) +
scale_x_log10(labels = comma, breaks = c(10, 100, 1000, 10000, 100000, 300000)) +
scale_y_log10(labels = comma, breaks = c(10, 100, 1000, 10000, 100000, 1000000)) +
labs(title = paste0("The 20 communities, within the yellow box, have received ",
top_20 %>% pull(pc_ben),
"% of all beneficiary allocations"),
x = "Population",
y = "Beneficiary freqiencies",
size = "Beneficiaries")
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "FSL" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
left_join(com %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
group_by(admin4pcode) %>%
summarise(clusters = n_distinct(cluster)),
by = "admin4pcode") %>%
arrange(desc(beneficiaries)) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
cum_pc = cumsum(pc_ben)) %>%
ggplot(aes(area = beneficiaries, fill = beneficiaries)) +
geom_treemap() +
geom_treemap_text(aes(label = admin4pcode), colour = "white", place = "centre", grow = TRUE) +
scale_fill_viridis_c(option = "mako", direction = -1,
breaks = c(1, 3, 6, 9)) +
theme(plot.caption = element_text(hjust = .5)) +
labs(title = "% of MPC beneficiary frequencies per community",
subtitle = "The top 10 communities form 50% of all beneficiary allocations",
caption = "Each tile is a single community. The larger the tile, the higher the share of beneficiary allocations.")
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "FSL" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
left_join(com %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
group_by(admin4pcode) %>%
summarise(clusters = n_distinct(cluster)),
by = "admin4pcode") %>%
arrange(desc(beneficiaries)) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
cum_pc = cumsum(pc_ben)) %>%
ggplot(aes(area = beneficiaries, fill = clusters)) +
geom_treemap() +
geom_treemap_text(aes(label = admin4pcode), colour = "white", place = "centre", grow = TRUE) +
scale_fill_viridis_c(option = "mako", direction = -1,
breaks = c(1, 3, 6, 9)) +
theme(plot.caption = element_text(hjust = .5)) +
labs(title = "% of MPC beneficiary frequencies per community",
subtitle = "The top 10 communities form 50% of all beneficiary allocations",
caption = "Each tile is a single community. The larger the tile, the higher the share of beneficiary allocations.")
com %>%
left_join(locations %>%
select(admin4pcode,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en),
by = "admin4pcode") %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
filter(cluster == "FSL" & !is.na(beneficiaries) & beneficiaries > 0) %>%
group_by(admin4pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
left_join(com %>%
filter(activity != "ISIMM" & project_status %in% c("Completed", "Ongoing")) %>%
group_by(admin4pcode) %>%
summarise(clusters = n_distinct(cluster)),
by = "admin4pcode") %>%
arrange(desc(beneficiaries)) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
cum_pc = cumsum(pc_ben)) %>%
ggplot(aes(area = beneficiaries, fill = clusters)) +
geom_treemap() +
geom_treemap_text(aes(label = admin4pcode), colour = "white", place = "centre", grow = TRUE) +
scale_fill_viridis_c(option = "mako", direction = -1,
breaks = c(1, 3, 6, 9)) +
theme(plot.caption = element_text(hjust = .5)) +
labs(title = "% of FSL beneficiary frequencies per community",
subtitle = "The top 10 communities form 50% of all beneficiary allocations",
caption = "Each tile is a single community. The larger the tile, the higher the share of beneficiary allocations.")
