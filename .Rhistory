distinct(cluster2 = cluster, activity),
by = c("item2" = "activity")) %>%
filter(cluster1 != cluster2) %>%
rename(activity1 = item1,
activity2 = item2) %>%
mutate(correlation = round(correlation, digits = 3)) %>%
select(activity1, activity2, corr = correlation, communities = n, cluster1, cluster2) %>%
arrange(desc(corr)) %>%
filter(communities > 20)  %>%
write_csv("./data/activity_pairs.csv")
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode")
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode")
locations %>% glimpse()
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en.,
admin4pcode),
by = "admin4pcode") %>% glimpse()
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = locationname_en.,
admin4pcode),
by = "admin4pcode") %>% glimpse()
locations %>% glimpse()
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>% glimpse()
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
mutate(beneficiary_frequencies = sum(Cash, Education, FSL, Nutrition, Protectin,
SNFI, WASH, CCCM, ERL, na.rm = TRUE))
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
mutate(beneficiary_frequencies = sum(Cash, Education, FSL, Nutrition, Protection,
SNFI, WASH, CCCM, ERL, na.rm = TRUE))
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
mutate(beneficiary_frequencies = psum(Cash, Education, FSL, Nutrition, Protection,
SNFI, WASH, CCCM, ERL, na.rm = TRUE))
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
mutate(beneficiary_frequencies = rowSums(Cash, Education, FSL, Nutrition, Protection,
SNFI, WASH, CCCM, ERL, na.rm = TRUE))
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>% glimpse()
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(na.rm = TRUE))
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums., (na.rm = TRUE))
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(., na.rm = TRUE))
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>% glimpse()
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE))
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE))
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",")
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
rename(frequencies = beneficiary_frequencies) %>%
arrange(desc(frequencies)) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
arrange(desc(frequencies)) %>%
select(district, sub_district, community,
Cash, Education, FSL,
Nutrition, Protection, SNFI,
WASH, CCCM, ERL, beneficiary_frequencies) %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
arrange(desc(beneficiary_frequencies)) %>%
select(district, sub_district, community,
Cash, Education, FSL,
Nutrition, Protection, SNFI,
WASH, CCCM, ERL, beneficiary_frequencies) %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
arrange(desc(beneficiary_frequencies)) %>%
select(district, sub_district, community,
Cash, Education, FSL,
Nutrition, Protection, SNFI,
WASH, CCCM, ERL,
beneficiary_frequencies, total_pop,
admin4pcode) %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
arrange(desc(beneficiary_frequencies)) %>%
select(district, sub_district, community,
Cash, Education, FSL,
Nutrition, Protection, SNFI,
WASH, CCCM, ERL,
beneficiary_frequencies, total_pop,
admin4pcode) %>%
write_csv("./data/admin4_cluster_beneficiary_frequencies.csv")
com %>%
filter(project_status %in% c("Completed", "Ongoing") &
activity %out% c("ISIMM")) %>%
group_by(admin4pcode, cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(names_from = cluster, values_from = beneficiaries) %>%
mutate(beneficiary_frequencies = rowSums(.[ , c(2:9)], na.rm = TRUE)) %>%
right_join(pop %>% select(total_pop, admin4pcode),
by = "admin4pcode") %>%
left_join(locations %>%
select(district = admin2name_en,
sub_district = admin3name_en,
community = location_name_en,
admin4pcode),
by = "admin4pcode") %>%
arrange(desc(beneficiary_frequencies)) %>%
select(district, sub_district, community,
Cash, Education, FSL,
Nutrition, Protection, SNFI,
WASH, CCCM, ERL,
beneficiary_frequencies, total_pop,
admin4pcode) %>%
rename(frequencies = beneficiary_frequencies) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE, scrollY = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Community-level cluster beneficiary frequencies")) %>%
formatCurrency(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_pop", "Cash", "Education",
"FSL", "Nutrition", "Protection",
"SNFI", "WASH", "CCCM", "ERL",
"frequencies"), digits = 0)
com %>%
mutate(no_admin5 = ifelse(is.na(admin5pcode),
"has_admin5",
"no_admin5")) %>%
filter(activity != "ISIMM") %>%
group_by(cluster, no_admin5) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
pivot_wider(names_from = no_admin5, values_from = beneficiaries) %>%
mutate(total_frequencies = sum(has_admin5, no_admin5, na.rm = TRUE),
pc_missing = round(has_admin5 / total_frequencies * 100, digits = 2)) %>%
select(-total_frequencies) %>%
flextable() %>%
theme_zebra() %>%
set_caption("The impracticality of requiring partners to report at admin5") %>%
set_table_properties(layout = "autofit", width = .8)
tribble(
~acronym, ~name,
"CCCM", "Camp Management and Camp Coordination",
"CVA", "Cash and Voucher Assistance",
"CWG", "Cash Working Group",
"ERL", "Early Recovery and Livelihoods",
"FSL", "Food Security and Livelihoods",
"HNAP", "Humanitarian Needs Assessment Programme",
"HNO", "Humanitarian Needs Overview",
"HRP", "Humanitarian Response Plan",
"IDP", "Internally Displaced Person",
"MPC", "Multipurpose Cash",
"MSNA", "Multisector Needs Assessment",
"NWS", "Northwest Syria",
"OCHA", "UN Office for the Coordination of Humanitarian Affairs",
"SNFI", "Shelter and Non-Food Items",
"SWM", "Solid Waste Management",
"WASH", "Water, Sanitation and Hygiene"
) %>%
flextable() %>%
set_caption(as_paragraph(as_b("Acronyms"))) %>%
hline_top(border = fp_border_default(width = 0),
part = "header") %>%
set_table_properties(layout = "autofit") %>%
fontsize(j = 1:2, size = 10) %>%
fontsize(j = 1:2, size = 10, part = "header") %>%
line_spacing(part = "all", space = .25)
